# ===================================================================
# ERP System Configuration
# ===================================================================

# Globale Einstellungen
spring:
  application:
    name: ERP-System
  profiles:
    active: dev
  
  # Jackson JSON Configuration
  jackson:
    time-zone: Europe/Berlin
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
    default-property-inclusion: NON_NULL

# Server Configuration
server:
  port: 8080
  error:
    include-stacktrace: never
    include-message: always

# Management/Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Logging
logging:
  level:
    root: INFO
    com.yourdomain.erp: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration (für alle Profile)
jwt:
  secret-key: "RXJwU3lzdGVtMjAyNVNlY3VyZUtleWQ4ZjdlNmM1YjRhMzkyODFmMGU5ZDhjN2I2YTU5NDgzNzI2MTUwNDgzOTI4MTc0NjUwMjkzODQ3NTYxODI5MzA="
  expiration: 86400000 # 24 hours
  refresh-expiration: 604800000 # 7 days

---
# ===================================================================
# DEVELOPMENT PROFILE
# ===================================================================
spring:
  config:
    activate:
      on-profile: dev

  # H2 Database für schnelle Entwicklung - GEÄNDERT
  datasource:
    url: jdbc:h2:file:./data/erpdb;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  # JPA/Hibernate - GEÄNDERT
  jpa:
    hibernate:
      ddl-auto: update  # Geändert von create-drop zu update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
        default_schema: public

  # H2 Console - UNVERÄNDERT
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  # Devtools - UNVERÄNDERT
  devtools:
    restart:
      enabled: true

# Development Server
server:
  port: 8080

# Development Logging
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# ===================================================================
# QA/TEST PROFILE
# ===================================================================
spring:
  config:
    activate:
      on-profile: qa

  # PostgreSQL für QA
  datasource:
    url: jdbc:postgresql://localhost:5433/erp_qa
    driver-class-name: org.postgresql.Driver
    username: erp_qa_user
    password: ${QA_DB_PASSWORD:qa_password}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000

  # JPA für QA
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: Europe/Berlin

  # Flyway Migration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

# QA Server
server:
  port: 8081

# QA Logging
logging:
  level:
    com.yourdomain.erp: INFO
    org.springframework.security: WARN
  file:
    name: logs/erp-qa.log

---
# ===================================================================
# STAGING PROFILE
# ===================================================================
spring:
  config:
    activate:
      on-profile: staging

  # PostgreSQL für Staging
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_NAME:erp_staging}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:erp_user}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000

  # JPA für Staging
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Flyway
  flyway:
    enabled: true
    locations: classpath:db/migration
    validate-on-migrate: true

# Staging Server
server:
  port: 8080

# Staging Security
jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000 # 1 hour
  refresh-expiration: 86400000 # 1 day

---
# ===================================================================
# PRODUCTION PROFILE
# ===================================================================
spring:
  config:
    activate:
      on-profile: prod

  # PostgreSQL Production
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
        cache:
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory

  # Flyway Production
  flyway:
    enabled: true
    locations: classpath:db/migration
    validate-on-migrate: true
    out-of-order: false

# Production Server
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  http2:
    enabled: true

# Production Security
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000}

# Production Logging
logging:
  level:
    root: WARN
    com.yourdomain.erp: INFO
  file:
    name: ${LOG_FILE:/var/log/erp-system/application.log}
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30

# Production Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true